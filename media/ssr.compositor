// SSR
// compositor SSR {
    // technique {
	    // Temporary textures
	    // texture rt0 128 128 PF_A8R8G8B8
	    // texture rt1 128 128 PF_A8R8G8B8

	    // target rt1 {
	        // Render output from previous compositor (or original scene)
	        // input previous
	    // }

	    // target rt0 {
	        // Start with clear texture
	        // input none
	        // Vertical blur pass
	        // pass render_quad {
	            // Renders a fullscreen quad with a material
	            // material Ogre/Compositor/Blur0
	            // input 0 rt1
	        // }
	    // }

	    // target rt1 {
	        // Start with clear texture
	        // input none
	        // Horizontal blur pass
	        // pass render_quad {
	            // Renders a fullscreen quad with a material
	            // material Ogre/Compositor/Blur1
	            // input 0 rt0
	        // }
	    // }

	    // target_output {
	        // Start with clear output
	        // input previous
	        // Draw a fullscreen quad
	        // pass render_quad {
	            // Renders a fullscreen quad with a material
	            // material Ogre/Compositor/BloomBlend
	            // input 0 rt1
	        // }
	    // }

        texture view_normals_xy_depth_z_rough_w target_width target_height PF_FLOAT16_RGBA
        // texture view_depth target_width target_height PF_FLOAT32_R
        // texture roughness target_width target_height PF_R8
        texture in_out_target target_width target_height PF_A8R8G8B8

        target view_normals_xy_depth_z_rough_w {
            input none
            pass clear { }
            
            shadows off
            material_scheme normal_depth_rough
            
            // everything but the lights and their meshes
            // could do this with something like a visibility mask too
            pass render_scene {
                //These values are synchronized with the code
                // first_render_queue 10
                // last_render_queue  79   
            }
        }
	// }
// }